From 4580d79e64ca06f4ea7f5ef910ccb42e7abd198f Mon Sep 17 00:00:00 2001
From: Koen Kooi <koen@dominion.thruhere.net>
Date: Sat, 27 Jan 2018 11:05:38 +0100
Subject: [PATCH 1/3] timelapse: add m4v and mkv as supported container formats

Not every player can handle non-mpeg2 codecs inside a .mpg. QuickTime
Player on OSX goes a step further and won't play h264-in-mp4, only
h264-in-m4v.
---
 src/octoprint/server/__init__.py      | 2 +-
 src/octoprint/server/api/timelapse.py | 2 +-
 src/octoprint/timelapse.py            | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/octoprint/server/__init__.py b/src/octoprint/server/__init__.py
index ba959ab..bc70e88 100644
--- a/src/octoprint/server/__init__.py
+++ b/src/octoprint/server/__init__.py
@@ -499,7 +499,7 @@ class Server(object):
 		server_routes = self._router.urls + [
 			# various downloads
 			# .mpg and .mp4 timelapses:
-			(r"/downloads/timelapse/([^/]*\.mp[g4])", util.tornado.LargeResponseHandler, joined_dict(dict(path=self._settings.getBaseFolder("timelapse")),
+			(r"/downloads/timelapse/([^/]*\.m(.*))", util.tornado.LargeResponseHandler, joined_dict(dict(path=self._settings.getBaseFolder("timelapse")),
 			                                                                                      download_handler_kwargs,
 			                                                                                      no_hidden_files_validator)),
 			(r"/downloads/files/local/(.*)", util.tornado.LargeResponseHandler, joined_dict(dict(path=self._settings.getBaseFolder("uploads"),
diff --git a/src/octoprint/server/api/timelapse.py b/src/octoprint/server/api/timelapse.py
index ab366b2..195aee2 100644
--- a/src/octoprint/server/api/timelapse.py
+++ b/src/octoprint/server/api/timelapse.py
@@ -128,7 +128,7 @@ def downloadTimelapse(filename):
 @api.route("/timelapse/<filename>", methods=["DELETE"])
 @restricted_access
 def deleteTimelapse(filename):
-	if util.is_allowed_file(filename, ["mpg", "mpeg", "mp4"]):
+	if util.is_allowed_file(filename, ["mpg", "mpeg", "mp4", "m4v", "mkv"]):
 		timelapse_folder = settings().getBaseFolder("timelapse")
 		full_path = os.path.realpath(os.path.join(timelapse_folder, filename))
 		if full_path.startswith(timelapse_folder) and os.path.exists(full_path):
diff --git a/src/octoprint/timelapse.py b/src/octoprint/timelapse.py
index 40452bd..d74ca45 100644
--- a/src/octoprint/timelapse.py
+++ b/src/octoprint/timelapse.py
@@ -87,7 +87,7 @@ def get_finished_timelapses():
 	files = []
 	basedir = settings().getBaseFolder("timelapse")
 	for entry in scandir(basedir):
-		if not fnmatch.fnmatch(entry.name, "*.mp[g4]"):
+		if not fnmatch.fnmatch(entry.name, "*.m*"):
 			continue
 		files.append({
 			"name": entry.name,
-- 
2.0.1

